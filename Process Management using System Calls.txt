1. Program to create a child process using fork

#include<stdio.h>
#include<sys/types.h>
#include<stdlib.h>
int main(){
int pid;
pid=getpid;
printf("current process pid is %d",pid);
printf("forking a child process \n");
pid=forkO;
if(pid==0)
{
printf("child process id: %d and its parent id: %d", getpid(), getppid());
}
else{
printf("parent process id %d",getpid);
}
return 0;
}


2. Program to create an orphan process

#include<stdio.h>
#include<sys/types.h>
#include<stdlib.h>
int main int pid;
pid=getpid;
printf("current process pid is %d", pid);
printf("forking a child process In");
pid-fork;
if(pid==0)
{
printf("child process is sleeping");
sleep(10);
printf("orphan child parent id: d", getppid0);
}
else{
printf("parent process completed");
｝
return 0;
｝


3. Program to create a zombie process #include<stdio.h>
#include<sys/types.h>
#include<stdlib.h>
int main(){
pid_t a;
a=fork();
if(a>0)
{
sleep(20);
printf"PID of Parent d", getpid());
}
else
{
printf("PID of CHILD %d", getpido);
exit(0);
}}
